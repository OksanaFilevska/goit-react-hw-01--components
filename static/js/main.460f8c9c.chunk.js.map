{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Container/Container.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/defaultProfile.jpg","components/Profile/Profile.js","components/Container/Container.js","components/Statistics/Statistics.js","components/FriendList/defaultProfile.jpg","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","defaultImage","alt","label","quantity","followers","views","likes","Container","children","container","getRandomNumber","min","max","Math","round","random","Statistics","title","statistics","statlist","map","stat","item","style","backgroundColor","percentage","id","FriendList","friends","friendList","friend","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.460f8c9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__O-7Zo\",\"description\":\"Profile_description__2BVuB\",\"avatar\":\"Profile_avatar__3FUhL\",\"name\":\"Profile_name__5Vx53\",\"location\":\"Profile_location__20HtE\",\"tag\":\"Profile_tag__2H6Xn\",\"stats\":\"Profile_stats__YxjGa\",\"label\":\"Profile_label__Vjuta\",\"quantity\":\"Profile_quantity__3aI8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2avDb\",\"title\":\"Statistics_title__2zii3\",\"statlist\":\"Statistics_statlist__1Bww9\",\"item\":\"Statistics_item__BCDiy\",\"label\":\"Statistics_label__3nONR\",\"percentage\":\"Statistics_percentage__2Dg9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1vdwR\",\"item\":\"FriendList_item__36nxf\",\"statusOnline\":\"FriendList_statusOnline__2amzg\",\"statusOffline\":\"FriendList_statusOffline__1_EiA\",\"avatar\":\"FriendList_avatar__1cFYV\",\"name\":\"FriendList_name__3Nagf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1Trl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1TkiK\"};","export default __webpack_public_path__ + \"static/media/defaultProfile.23b78454.jpg\";","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\nimport defaultImage from './defaultProfile.jpg';\r\n\r\nfunction Profile({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className={s.profile} key={name}>\r\n      <div className={s.description}>\r\n        <img src={avatar ?? defaultImage} alt=\"Аватар пользователя\" className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({ stats, title }) {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s.statlist}>\r\n        {stats.map(stat => (\r\n          <li\r\n            className={s.item}\r\n            key={stat.id}\r\n            style={{\r\n              backgroundColor: `rgb(${getRandomNumber(0, 255)}, ${getRandomNumber(\r\n                0,\r\n                255,\r\n              )}, ${getRandomNumber(0, 255)})`,\r\n            }}\r\n          >\r\n            <span className={s.label}>{stat.label}</span>\r\n            <span className={s.percentage}>{stat.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  id: PropTypes.string,\r\n  label: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n};\r\n\r\nfunction getRandomNumber(min, max) {\r\n  return Math.round(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport default Statistics;\r\n","export default __webpack_public_path__ + \"static/media/defaultProfile.23b78454.jpg\";","import PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\nimport defaultImage from './defaultProfile.jpg';\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className={s.friendList}>\r\n      {friends.map(friend => (\r\n        <li className={s.item} key={friend.id}>\r\n          <span className={friend.isOnline ? s.statusOnline : s.statusOffline}></span>\r\n          <img\r\n            className={s.avatar}\r\n            src={friend.avatar ?? defaultImage}\r\n            alt={friend.name}\r\n            width=\"48\"\r\n          />\r\n          <p className={s.name}>{friend.name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  id: PropTypes.number,\r\n  isOnline: PropTypes.bool,\r\n};\r\n\r\nexport default FriendList;\r\n\r\n<li class=\"item\">\r\n  <span class=\"status\"></span>\r\n  <img class=\"avatar\" src=\"\" alt=\"\" width=\"48\" />\r\n  <p class=\"name\"></p>\r\n</li>;\r\n","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import \"./App.css\";\nimport Profile from \"./components/Profile/Profile\";\nimport user from \"./user.json\";\nimport Container from \"./components/Container/Container\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport statisticalData from \"./statistical-data.json\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport friends from \"./friends.json\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./transactions.json\";\n\nfunction App() {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}